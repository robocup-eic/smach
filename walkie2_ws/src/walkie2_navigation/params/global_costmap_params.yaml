global_costmap:
  global_frame: map
  robot_base_frame: base_footprint
  update_frequency: 1.0
  publish_frequency: 1.0
  static_map: true

  plugins:
    - {name: static_layer, type: "costmap_2d::StaticLayer"}
    #- {name: rgbd_obstacle_layer, type: "spatio_temporal_voxel_layer/SpatioTemporalVoxelLayer"}
    - {name: obstacle_layer, type: "costmap_2d::NonPersistentVoxelLayer"}
    - {name: inflation_layer, type: "costmap_2d::InflationLayer"}

  static_layer:
    enabled:              true

  obstacle_layer:
    enabled:              true
    track_unknown_space:  true
    max_obstacle_height:  1.7
    unknown_threshold:    15
    mark_threshold:       0
    combination_method:   1
    obstacle_range:       9.0
    origin_z:             0.0
    z_resolution:         0.05
    z_voxels:             16
    publish_voxel_map: true
    observation_sources: my_scan
    my_scan:
      data_type: LaserScan
      topic: walkie2/scan
      marking: true
      min_obstacle_height: 0.0
      max_obstacle_height: 1.7

  inflation_layer:
    enabled: true
    cost_scaling_factor: 10.0 # exponential rate at which the obstacle cost drops off (default: 10)
    inflation_radius: 1.25 # max. distance from an obstacle at which costs are incurred for planning paths.

  rgbd_obstacle_layer:
    enabled:               true
    voxel_decay:           20     #seconds if linear, e^n if exponential
    decay_model:           0      #0=linear, 1=exponential, -1=persistent
    voxel_size:            0.05   #meters
    track_unknown_space:   true   #default space is unknown
    observation_persistence: 0.0  #seconds
    max_obstacle_height:   1.2    #meters
    unknown_threshold:     15     #voxel height
    mark_threshold:        0      #voxel height
    update_footprint_enabled: true
    combination_method:    1      #1=max, 0=override
    obstacle_range:        3.0    #meters
    origin_z:              0.0    #meters
    publish_voxel_map:     true   # default off
    transform_tolerance:   0.2    # seconds
    mapping_mode:          false   # default off, saves map not for navigation
    map_save_duration:     60     #default 60s, how often to autosave
    observation_sources:   rgbd1_clear rgbd1_mark
    rgbd1_mark:
      data_type: PointCloud2
      topic: /voxel_grid/output
      marking: true
      clearing: false
      min_obstacle_height: 0.3     #default 0, meters
      max_obstacle_height: 1.2     #defaule 3, meters
      expected_update_rate: 0.0    #default 0, if not updating at this rate at least, remove from buffer
      observation_persistence: 0.0 #default 0, use all measurements taken during now-value, 0=latest 
      inf_is_valid: false          #default false, for laser scans
      clear_after_reading: true    #default false, clear the buffer after the layer gets readings from it
      voxel_filter: true           #default off, apply voxel filter to sensor, recommend on 
      voxel_min_points: 0          #default 0, minimum points per voxel for voxel filter
      min_z: 0.4                   #default 0, meters
      max_z: 3.0                   #default 10, meters	

    rgbd1_clear:
      enabled: true                #default true, can be toggled on/off with associated service call
      data_type: PointCloud2
      topic: /voxel_grid/output
      marking: false
      clearing: true
      min_z: 0.1                   #default 0, meters
      max_z: 3.0                   #default 10, meters
      vertical_fov_angle: 0.7      #default 0.7, radians
      horizontal_fov_angle: 1.14   #default 1.04, radians
      decay_acceleration: 1.       #default 0, 1/s^2. If laser scanner MUST be 0
      model_type: 0                #default 0 (depth camera). Use 1 for 3D Lidar

